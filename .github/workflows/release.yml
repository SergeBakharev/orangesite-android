name: Build & Release APK

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Determine version name
        id: version_name
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            # For tagged releases, use the tag name (remove 'v' prefix if present)
            TAG_NAME=${GITHUB_REF#refs/tags/}
            VERSION_NAME=${TAG_NAME#v}
          else
            # For dev builds, use current date in YY.MM.DD format
            VERSION_NAME=$(date +%y.%m.%d)
          fi
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Using version name: $VERSION_NAME"

      - name: Grant execute permission for gradlew
        run: chmod +x ./app/gradlew || chmod +x ./gradlew

      - name: Build Release APK
        run: |
          if [ -f ./gradlew ]; then
            ./gradlew assembleRelease -PversionName=${{ steps.version_name.outputs.version_name }}
          else
            cd app && ./gradlew assembleRelease -PversionName=${{ steps.version_name.outputs.version_name }}
          fi

      - name: Find APK path
        id: apk_path
        run: |
          APK_PATH=$(find $GITHUB_WORKSPACE/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Set release variables
        id: vars
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            RELEASE_NAME="$TAG_NAME"
            PRERELEASE=false
          else
            TAG_NAME=dev
            RELEASE_NAME="Development Build (${{ steps.version_name.outputs.version_name }})"
            PRERELEASE=true
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      - name: Force move 'dev' tag to latest commit on develop
        if: github.ref == 'refs/heads/master'
        run: |
          git tag -f dev
          git push origin dev --force

      - name: Create or Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.release_name }}
          prerelease: ${{ steps.vars.outputs.prerelease }}
          files: ${{ steps.apk_path.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 